openapi: 3.0.0
info:
  title: BRAINCHAIN API Documentation
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CESAWALLMAGAZINE/Connections_trial/1.0.0
  - url: https://api.example.com/v1
paths:
# CONNECTIONS

  /connections:
    get:
      summary: Get Connections
      description: Retrieve a list of connections for the user.
      tags:
        - Connections
      parameters:
        - name: filter
          in: query
          description: Filter by category (e.g., `all`, `web`, `uiux`, `dataScience`, `projectManagement`). Optional.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    role:
                      type: string
                    location:
                      type: string
                    age:
                      type: string
                    skills:
                      type: array
                      items:
                        type: string
                    level:
                      type: integer
                    profileImage:
                      type: string
      security:
        - bearerAuth: []

  /connections/{connectionId}:
    get:
      summary: Get Connection Details
      description: Retrieve the details of a specific connection.
      tags:
        - Connections
      parameters:
        - name: connectionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  role:
                    type: string
                  location:
                    type: string
                  age:
                    type: string
                  skills:
                    type: array
                    items:
                      type: string
                  level:
                    type: integer
                  profileImage:
                    type: string
      security:
        - bearerAuth: []

  /connections/{connectionId}/message:
    post:
      summary: Send Message to Connection
      description: Send a message to a connection.
      tags:
        - Connections
      parameters:
        - name: connectionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
        - bearerAuth: []

  /connectiondomains:
    get:
      summary: Get Available Connection Domains
      description: Retrieve a list of available connection domains for selection.
      tags:
        - Connections
      parameters:
        - name: search
          in: query
          description: Optional search query to filter connection domains by name.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: dom1
                    name:
                      type: string
                      example: Software Development
      security:
        - bearerAuth: []
        
  /users/{userId}/connectiondomains:
    post:
      summary: Select Connection Domains
      description: Submit the selected connection domains for a user.
      tags:
        - Connections
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectionDomains:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: dom1
                      name:
                        type: string
                        example: Software Development
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Connection domains selected successfully.
      security:
        - bearerAuth: []
        
# Deep Connections

  /deepconnects/filters:
    get:
      summary: Retrieve available filter options for deep connects
      operationId: getFilterOptions
      tags:
        - Deep Connects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      type: string
                    example: ["Pune, MH", "Hyderabad, TL"]
                  purposes:
                    type: array
                    items:
                      type: string
                    example: ["Internship", "Mentee", "Job"]
                  domains:
                    type: array
                    items:
                      type: string
                    example: ["Software Developer", "UI/UX Designer"]
                  experiences:
                    type: array
                    items:
                      type: string
                    example: ["6-10 yrs", "10+ yrs", "20+ yrs"]
                  educationLevels:
                    type: array
                    items:
                      type: string
                    example: ["Bachelor's Degree", "Master's Degree", "PhD"]
      security:
        - bearerAuth: []
  
  /deepconnects:
    post:
      summary: Apply filters to get deep connects based on the selected criteria
      operationId: applyFilters
      tags:
        - Deep Connects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: array
                  items:
                    type: string
                  example: ["Pune, MH", "Hyderabad, TL"]
                purpose:
                  type: array
                  items:
                    type: string
                  example: ["Internship", "Mentee", "Job"]
                domain:
                  type: array
                  items:
                    type: string
                  example: ["Software Developer", "UI/UX Designer"]
                experience:
                  type: array
                  items:
                    type: string
                  example: ["6-10 yrs", "10+ yrs", "20+ yrs"]
                education:
                  type: array
                  items:
                    type: string
                  example: ["Bachelor's Degree", "Master's Degree", "PhD"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: conn1
                    name:
                      type: string
                      example: Satyam
                    role:
                      type: string
                      example: UI/UX designer
                    location:
                      type: string
                      example: Pune, MH
                    age:
                      type: string
                      example: 45 Yrs
                    skills:
                      type: array
                      items:
                        type: string
                      example: ["React JS", "Java"]
                    level:
                      type: integer
                      example: 3
                    profileImage:
                      type: string
                      example: url_to_image
      security:
        - bearerAuth: []
        
  /deepconnects/filters/advanced:
    get:
      summary: Retrieve available advanced filter options for deep connects
      operationId: getAdvancedFilterOptions
      tags:
        - Deep Connects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  browsesSimilarContent:
                    type: object
                    properties:
                      min:
                        type: integer
                        example: 0
                      max:
                        type: integer
                        example: 10
                  psychometricCompatibility:
                    type: object
                    properties:
                      min:
                        type: integer
                        example: 0
                      max:
                        type: integer
                        example: 10
                  hasConnectsIn:
                    type: array
                    items:
                      type: string
                    example: ["Location1", "Location2", "Location3"]
                  tiers:
                    type: array
                    items:
                      type: string
                    example: ["Tier 1", "Tier 2", "Tier 3"]
                  titles:
                    type: array
                    items:
                      type: string
                    example: ["Title 1", "Title 2", "Title 3"]
                  organizations:
                    type: array
                    items:
                      type: string
                    example: ["Org 1", "Org 2", "Org 3"]
                  interests:
                    type: array
                    items:
                      type: string
                    example: ["Interest 1", "Interest 2", "Interest 3"]
                  skills:
                    type: array
                    items:
                      type: string
                    example: ["Skill 1", "Skill 2", "Skill 3"]
      security:
        - bearerAuth: []

  /deepconnects/advanced:
    post:
      summary: Apply advanced filters to get deep connects based on the selected criteria
      operationId: applyAdvancedFilters
      tags:
        - Deep Connects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                browsesSimilarContent:
                  type: integer
                  example: 7
                psychometricCompatibility:
                  type: integer
                  example: 8
                hasConnectsIn:
                  type: array
                  items:
                    type: string
                  example: ["Location1", "Location2"]
                tier:
                  type: string
                  example: "Tier 2"
                title:
                  type: string
                  example: "Title 1"
                organization:
                  type: string
                  example: "Org 1"
                interest:
                  type: string
                  example: "Interest 1"
                skills:
                  type: array
                  items:
                    type: string
                  example: ["Skill 1", "Skill 2"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: conn1
                    name:
                      type: string
                      example: Satyam
                    role:
                      type: string
                      example: UI/UX designer
                    location:
                      type: string
                      example: Pune, MH
                    age:
                      type: string
                      example: 45 Yrs
                    skills:
                      type: array
                      items:
                        type: string
                      example: ["React JS", "Java"]
                    level:
                      type: integer
                      example: 3
                    profileImage:
                      type: string
                      example: url_to_image
      security:
        - bearerAuth: []
        
# Domain

  /domains:
    get:
      summary: Get Available Domains
      description: Retrieve a list of available domains for selection.
      tags:
        - Domain
      parameters:
        - name: search
          in: query
          description: Optional search query to filter domains by name.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: dom1
                    name:
                      type: string
                      example: Software Developer
      security:
        - bearerAuth: []

# LOCATION ----> FILTERS
        
  /locations:
    get:
      summary: Get Available Locations
      description: Retrieve the list of available locations for selection.
      tags:
        - Filters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      type: string
                      example: "Pune, MH"
      security:
        - bearerAuth: []

  /locations/search:
    get:
      summary: Search Locations
      description: Search for locations based on a query string.
      tags:
        - Filters
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      type: string
                      example: "Delhi, DL"
      security:
        - bearerAuth: []

  /organizations:
    get:
      summary: Get Available Organizations
      description: Retrieve a list of available organizations for selection.
      tags:
        - Filters
      parameters:
        - name: search
          in: query
          schema:
            type: string
          description: Optional search query to filter organizations by name.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: org1
                    name:
                      type: string
                      example: Capgemini
      security:
        - bearerAuth: []
        
# MESSAGES

  /messages:
    get:
      summary: Get Messages
      description: Retrieve a list of messages for the user.
      tags:
        - Messages
      parameters:
        - name: filter
          in: query
          description: Filter by message status (e.g., all, unread, read). Optional.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: msg1
                    sender:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Dev Patel
                        profileImage:
                          type: string
                          example: url_to_image
                        level:
                          type: integer
                          example: 2
                    snippet:
                      type: string
                      example: What about that new jacket if I...
                    timestamp:
                      type: string
                      format: date-time
                      example: 2024-07-09T09:18:00Z
                    status:
                      type: string
                      example: unread
      security:
        - bearerAuth: []

  /messages/{messageId}:
    get:
      summary: Get Message Details
      description: Retrieve the details of a specific message.
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          example: msg1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: msg1
                  sender:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dev Patel
                      profileImage:
                        type: string
                        example: url_to_image
                      level:
                        type: integer
                        example: 2
                  content:
                    type: string
                    example: What about that new jacket if I buy it online?
                  timestamp:
                    type: string
                    format: date-time
                    example: 2024-07-09T09:18:00Z
                  status:
                    type: string
                    example: unread
      security:
        - bearerAuth: []

    put:
      summary: Update Message Status
      description: Update the status of a message (mark as read).
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          example: msg1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: read
              required:
                - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Message status updated successfully.
      security:
        - bearerAuth: []

# MY PROFILE

  /users/{userId}/bio:
    
    # get:
    #   summary: Get Professional Profile
    #   description: Retrieve the professional details of a user's profile.
    #   tags:
    #     - My Profile
    #   parameters:
    #     - name: userId
    #       in: path
    #       required: true
    #       schema:
    #         type: string
    #       example: "12345"
    #   responses:
    #     '200':
    #       description: OK
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               id:
    #                 type: string
    #                 example: "12345"
    #               name:
    #                 type: string
    #                 example: "Satyam Mirgane"
    #               age:
    #                 type: integer
    #                 example: 22
    #               role:
    #                 type: string
    #                 example: "UI/UX designer"
    #               location:
    #                 type: string
    #                 example: "Pune"
    #               bio:
    #                 type: string
    #                 example: "Alex Johnson is a passionate and innovative UI/UX Designer with over seven years of experience in creating user-centered designs for web and mobile applications. Alex specializes in designing..."
    #               education:
    #                 type: array
    #                 items:
    #                   type: object
    #                   properties:
    #                     institution:
    #                       type: string
    #                       example: "PCCOE, Pune"
    #                     degree:
    #                       type: string
    #                       example: "B.Tech Computer Engineering"
    #                     startYear:
    #                       type: integer
    #                       example: 2021
    #                     endYear:
    #                       type: integer
    #                       example: 2025
    #               skills:
    #                 type: array
    #                 items:
    #                   type: string
    #                   example: "React"
    #               experience:
    #                 type: array
    #                 items:
    #                   type: object
    #                   properties:
    #                     company:
    #                       type: string
    #                       example: "Brainchain"
    #                     role:
    #                       type: string
    #                       example: "UI/UX designer"
    #                     startDate:
    #                       type: string
    #                       format: date
    #                       example: "2023-06-02"
    #                     endDate:
    #                       type: string
    #                       format: date
    #                       example: "2024-03-02"
    #   security:
    #     - bearerAuth: []
        
    put:
      summary: Update Bio
      description: Update the professional details of a user's profile.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                  example: "Alex Johnson is a passionate and innovative UI/UX Designer with over seven years of experience in creating user-centered designs for web and mobile applications. Alex specializes in designing..."
                
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Professional profile updated successfully."
      security:
        - bearerAuth: []
        
  /users/{userId}/name_location:
    put:
      summary: Update Name, title, location.
      description: Update Name, title, location.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Jayati Wajire"
                age:
                  type: integer
                  example: 21
                role:
                  type: string
                  example: "Backend Lead"
                locations:
                  type: array
                  items:
                    type: string
                    example: "Pune, MH"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Locations updated successfully.
      security:
        - bearerAuth: []
        
  /users/{userId}/interests:
  
    put:
      summary: Update Interests
      description: Update the professional details of a user's profile.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Interests:
                  type: string
                  example: "Web Development, AI/ML, Blockchain, Cricket, Share Marcket, "
                
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Professional profile updated successfully."
      security:
        - bearerAuth: []
  
    get:
      summary: Get User Interests
      description: Retrieve the list of interests for a user.
      tags:
        - Profiles
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  interests:
                    type: array
                    items:
                      type: string
                      example: "AIML"
      security:
        - bearerAuth: []
  /users/{userId}/skills:
    get:
      summary: Get User Skills
      description: Retrieve the list of skills for a user.
      tags:
        - Profiles
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  skills:
                    type: array
                    items:
                      type: string
                      example: React
      security:
        - bearerAuth: []

    post:
      summary: Add a Skill
      description: Add a new skill to the user's profile.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill:
                  type: string
                  example: New Skill
              required:
                - skill
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Skill added successfully.
      security:
        - bearerAuth: []

  /users/{userId}/experience/:
    post:
      summary: Add Experience
      description: Add a new experience to a user's profile.
      tags:
      - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  example: New Company
                role:
                  type: string
                  example: New Role
                startDate:
                  type: string
                  format: date
                  example: 2024-01-15
                endDate:
                  type: string
                  format: date
                  example: 2024-07-15
              required:
                - company
                - role
                - startDate
                - endDate
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Experience added successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid request payload.
      security:
        - bearerAuth: []

  /users/{userId}/education:
    post:
      summary: Add Education
      description: Submit multiple educational qualifications.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                education:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: edu1
                      name:
                        type: string
                        example: HSC
              required:
                - organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Organizations selected successfully.
      security:
        - bearerAuth: []
        
  /users/{userId}/domains:
    post:
      summary: Select Domains
      description: Submit the selected domains for a user.
      tags:
        - My Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domains:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: dom1
                      name:
                        type: string
                        example: Software Developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Domains selected successfully.
      security:
        - bearerAuth: []
        
# PROFILES
        
  /users/{userId}:
    get:
      summary: Get User Profile
      description: Retrieve the details of a user's profile.
      tags:
        - Profiles
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "12345"
                  name:
                    type: string
                    example: "Ajay"
                  role:
                    type: string
                    example: "UI/UX designer"
                  location:
                    type: string
                    example: "Pune"
                  profileImage:
                    type: string
                    example: "url_to_image"
                  bio:
                    type: string
                    example: "Alex Johnson is a passionate and innovative UI/UX Designer..."
                  interests:
                    type: array
                    items:
                      type: string
                      example: "AIML"
                  youtubeZNP:
                    type: object
                    additionalProperties:
                      type: string
                      example: "24 hrs"
                  booksZNP:
                    type: object
                    additionalProperties:
                      type: string
                      example: "24 hrs"
      security:
        - bearerAuth: []
    # put:
    #   summary: Update User Profile
    #   description: Update the details of a user's profile.
    #   tags:
    #     - Profiles
    #   parameters:
    #     - name: userId
    #       in: path
    #       required: true
    #       schema:
    #         type: string
    #       example: 12345
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           properties:
    #             name:
    #               type: string
    #               example: "Ajay"
    #             role:
    #               type: string
    #               example: "UI/UX designer"
    #             location:
    #               type: string
    #               example: "Pune"
    #             bio:
    #               type: string
    #               example: "Alex Johnson is a passionate and innovative UI/UX Designer..."
    #             interests:
    #               type: array
    #               items:
    #                 type: string
    #                 example: "AIML"
    #           required:
    #             - name
    #             - role
    #             - location
    #   responses:
    #     '200':
    #       description: OK
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               message:
    #                 type: string
    #                 example: "Profile updated successfully."
    #   security:
    #     - bearerAuth: []

  /users/{userId}/znp:
    get:
      summary: Get User ZNP Data
      description: Retrieve the user's ZNP (Zero Notification Principle) data for YouTube and Books.
      tags:
        - Profiles
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  youtubeZNP:
                    type: object
                    additionalProperties:
                      type: string
                      example: "24 hrs"
                  booksZNP:
                    type: object
                    additionalProperties:
                      type: string
                      example: "24 hrs"
      security:
        - bearerAuth: []

# REQUESTS

  /requests:
    get:
      summary: Get Requests
      description: Retrieve a list of requests.
      tags:
        - Requests
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: Filter by category (e.g., tier, requestType, compatibility).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "req1"
                    name:
                      type: string
                      example: "Jayati Wajire"
                    role:
                      type: string
                      example: "Backend Lead"
                    location:
                      type: string
                      example: "Pune, MH"
                    compatibility:
                      type: string
                      example: "90%"
                    age:
                      type: string
                      example: "21 Yrs"
                    skills:
                      type: array
                      items:
                        type: string
                        example: "REST API"
                    status:
                      type: string
                      example: "pending"
                    message:
                      type: string
                      example: "Hi! How are you?"
      security:
        - bearerAuth: []

  /requests/{requestId}:
    get:
      summary: Get Request Details
      description: Retrieve the details of a specific request.
      tags:
        - Requests
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          example: req1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "req1"
                  name:
                    type: string
                    example: "Jayati Wajire"
                  role:
                    type: string
                    example: "Backend Lead"
                  location:
                    type: string
                    example: "Pune, MH"
                  compatibility:
                    type: string
                    example: "90%"
                  age:
                    type: string
                    example: "21 Yrs"
                  skills:
                    type: array
                    items:
                      type: string
                      example: "REST API"
                  status:
                    type: string
                    example: "pending"
                  message:
                    type: string
                    example: "Hi! How are u ?"
      security:
        - bearerAuth: []

    put:
      summary: Update Request Status
      description: Update the status of a request (accept or reject).
      tags:
        - Requests
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          example: req1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ["accepted", "rejected"]
              required:
                - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Request status updated successfully."
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
# Location2, deepconnects2 and location2 skipped.